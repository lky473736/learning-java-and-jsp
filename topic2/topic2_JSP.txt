웹DB프로그래밍 (김형철) topic 2 

- HTTP
	- 기본적으로 클라이언트 - 서버 이용
	- HTML 문서를 전송하기 위한 프로토콜 (HyperText Transfer Protocol)
	- 404 error
		- 클라이언트가(사용자가) 잘못된 요청을 하였을 때 발생
		- https://blog.naver.com/lw_10page/221640822337
	- 500 error
		- 서버 내부 오류 발생
	- 200 error
		- 요청이 성공적으로 수행
		
- 인터넷 기반 서비스
	- 웹서비스만 있는게 아님 (가장 많이 사용하는 것)
	- 이메일, FTP, Telnet, DNS ...
	- 이메일 프로토콜
		- SMTP : 메일 보냄
		- POP3/IMAP : 메일 받음

- 클라이언트-서버 구조
	- 클라이언트 : 웹 서비스를 이용하는 사용자
	- 서버 : 웹 서비스를 제공하는 공급자 
	- 로그인
		- 클라이언트는 id와 pw를 서버에게 보냄 (GET, POST)
			- GET : url에 정보를 적어서 서버에게 보냄 (이때 쿼리스트링 해서 보냄 / 보안 취약, 빠름) -> url 한도 넘으면 못보냄 (4KB)
			- POST : url이 아니라 요청 메세지의 바디를 통해 전송 (보안 좋음 / 느림) 
	- form 필수 속성
		- form에 method 속성으로 지정 가능
		- form에 action 속성으로 서버프로그램주소를 작성 (사용자로부터 입력받은 데이터를 처리할 프로그램)
		- form에 name 속성으로 각 form을 구분하는 거
	
- 정적 웹 vs 동적 웹
	- https://velog.io/@dyunge_100/WEB-%EC%A0%95%EC%A0%81-%EC%9B%B9-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%99%80-%EB%8F%99%EC%A0%81-%EC%9B%B9-%ED%8E%98%EC%9D%B4%EC%A7%80
	- 정적 웹 : HTML 문서를 그대로 사용자에게 보여줌
		- 이미 저장된 파일을 클라이언트에게 전송하는 것
		- 그냥 파일만 전송
	- 동적 웹 : 요청에 따라서 그때마다 다른 페이지를 생성해서 전송하는 것 (시간이나 상황에 따라 달라짐)
		- 전송 단계에서의 새로운 변화 : 백엔드
		- 사용자 단계에서의 새로운 변화 : 프론트엔드
		- 동적 웹을 만들기 위해 스크립트 사용 
			- client script : 클라이언트에서 돌아가는 스크립트 (웹브라우저에서 돌아가는 스크립트 / javascript)
			- server script : 서버에서 실행되는 스크립트 (JSP, PHP...)
				- 서버에서 동적으로 무언가를 만들어서 보내줄 때 사용
				
- 예시
	- 프론트엔드 : <html> 2024.09.20. </html>
	- 백엔드 : <html> time.timenow </html>

- 웹 서버를 구축하기 위한 준비물
	- OS, 컴퓨터는 필수
	- 서버에 웹 서비스 프로그램 설치
		- JSP, node.js, django...
		- JSP는 자바를 기반으로 하는 스크립트 언어라고 생각하기

- 서블릿 컨테이너 : 일종의 해석기
	- WAS : 서블릿 컨테이너를 가지는 서버 (웹 어플리케이션을 실행하는 서버)
	- WAS를 설치해야만 JSP를 사용할 수 있는 것임
	- 서블릿 컨테이너 == 아파치 톰캣
	
- chapter 03 pdf에 34페이지 이후가 가장 중요